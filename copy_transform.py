# Особенности работы со списками
a = 1
b = a
d = 100
print(a)

a = ['a', 'b', 'c']
b = a
b[1] = 'z'
print(a)
# То же самое происходит и внутри функции
def change_in_list(input_list):
    input_list[1] = 'y'

change_in_list(a)
print(a)

# То есть, изменяя то, чему присвоено исхоное, мы, оказывается, меняем и исходное
#  Как это обойти
# 1 вариант - делать срез списка
a = ['a', 'b', 'c']
b = a[:]
b[1] = 'z'
print(a)

# 2 вариант - метод copy
a = ['a', 'b', 'c']
b = a.copy()
b[1] = 'z'
print(a)

# Но, если есть вложенные списки, то это не работает
a = ['a', 'b', ['c', 'd']]
b = a[:]
b[2][1] = 'z'
print(a)
# То же с copy
a = ['a', 'b', ['c', 'd']]
b = a.copy()
b[2][0] = 'z'
print(a)

